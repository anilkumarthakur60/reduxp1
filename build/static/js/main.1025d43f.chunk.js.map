{"version":3,"sources":["data/index.js","store/actions.js","store/slices/songsSlice.js","store/slices/moviesSlice.js","store/index.js","components/MoviePlaylist.js","components/SongPlaylist.js","App.js","index.js"],"names":["createRandomMovie","faker","word","adjective","noun","createRandomSong","music","songName","reset","createAction","songsSlice","createSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","index","indexOf","splice","extraReducers","builder","addCase","actions","songsReducer","reducer","moviesSlice","addMovie","removeMovie","moviesReducer","store","configureStore","songs","movies","MoviePlaylist","moviePlaylist","useSelector","dispatch","useDispatch","renderedMovies","map","movie","onClick","handleMovieRemove","className","SongPlaylist","songPlaylist","renderedSongs","song","handleSongRemove","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1025d43f.chunk.js","sourcesContent":["import { faker } from \"@faker-js/faker/locale/en\";\n\n// This file has nothing to do with Redux\n// It exports functions that create random\n// movies and song\n\nexport const createRandomMovie = () => {\n  return `${faker.word.adjective()} ${faker.word.noun()}`;\n};\n\nexport const createRandomSong = () => {\n  return faker.music.songName();\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const reset = createAction(\"app/reset\");\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { reset } from \"../actions\";\n\nconst songsSlice = createSlice({\n    name: \"song\",\n    initialState: [],\n    reducers: {\n        addSong(state, action) {\n            state.push(action.payload);\n        },\n        removeSong(state, action) {\n            // action.payload === string, the song we want to remove\n            const index = state.indexOf(action.payload);\n            state.splice(index, 1);\n        }\n    },\n    extraReducers(builder) {\n        builder.addCase(reset, (state, action) => {\n            return [];\n        });\n    }\n});\n\nexport const { addSong, removeSong } = songsSlice.actions;\nexport const songsReducer = songsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { reset } from \"../actions\";\n\nconst moviesSlice = createSlice({\n    name: \"movie\",\n    initialState: [],\n    reducers: {\n        addMovie(state, action) {\n            state.push(action.payload);\n        },\n        removeMovie(state, action) {\n            const index = state.indexOf(action.payload);\n            state.splice(index, 1);\n        }\n    },\n    extraReducers(builder) {\n        builder.addCase(reset, (state, action) => {\n            return [];\n        });\n    }\n});\n\nexport const { addMovie, removeMovie } = moviesSlice.actions;\nexport const moviesReducer = moviesSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { songsReducer, addSong, removeSong } from \"./slices/songsSlice\";\nimport { moviesReducer, addMovie, removeMovie } from \"./slices/moviesSlice\";\nimport { reset } from \"./actions\";\n\nconst store = configureStore({\n    reducer: {\n        songs: songsReducer,\n        movies: moviesReducer\n    }\n});\n\nexport { store, reset, addSong, removeSong, addMovie, removeMovie };\n","import { createRandomMovie } from \"../data\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addMovie, removeMovie } from \"../store\";\n\nfunction MoviePlaylist() {\n  const moviePlaylist = useSelector((state) => {\n    return state.movies;\n  });\n\n  const dispatch = useDispatch();\n  const handleMovieAdd = (movie) => {\n    dispatch(addMovie(movie));\n  };\n  const handleMovieRemove = (movie) => {\n\n    dispatch(removeMovie(movie));\n  };\n\n  const renderedMovies = moviePlaylist.map((movie) => {\n    return (\n      <li key={movie}>\n        {movie}\n        <button\n          onClick={() => handleMovieRemove(movie)}\n          className=\"button is-danger\"\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"content\">\n      <div className=\"table-header\">\n        <h3 className=\"subtitle is-3\">Movie Playlist</h3>\n        <div className=\"buttons\">\n          <button\n            onClick={() => handleMovieAdd(createRandomMovie())}\n            className=\"button is-link\"\n          >\n            + Add Movie to Playlist\n          </button>\n        </div>\n      </div>\n      <ul>{renderedMovies}</ul>\n    </div>\n  );\n}\n\nexport default MoviePlaylist;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { createRandomSong } from \"../data\";\nimport  {addSong,removeSong} from \"../store\";\n\nfunction SongPlaylist() {\n  const songPlaylist = useSelector((state) => {\n    return state.songs;\n  });\n\n  const dispatch = useDispatch();\n  const handleSongAdd = (song) => {\n    dispatch(addSong(song));\n  };\n  const handleSongRemove = (song) => {\n    dispatch(removeSong(song));\n  };\n\n  const renderedSongs = songPlaylist.map((song) => {\n    return (\n      <li key={song}>\n        {song}\n        <button\n          onClick={() => handleSongRemove(song)}\n          className=\"button is-danger\"\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"content\">\n      <div className=\"table-header\">\n        <h3 className=\"subtitle is-3\">Song Playlist</h3>\n        <div className=\"buttons\">\n          <button\n            onClick={() => handleSongAdd(createRandomSong())}\n            className=\"button is-link\"\n          >\n            + Add Song to Playlist\n          </button>\n        </div>\n      </div>\n      <ul>{renderedSongs}</ul>\n    </div>\n  );\n}\n\nexport default SongPlaylist;\n","import \"./styles.css\";\nimport { useDispatch } from \"react-redux\";\nimport MoviePlaylist from \"./components/MoviePlaylist\";\nimport SongPlaylist from \"./components/SongPlaylist\";\nimport { reset } from \"./store\";\n\nexport default function App() {\n    const dispatch = useDispatch();\n\n    const handleResetClick = () => {\n        dispatch(reset());\n    };\n\n    return (\n        <div className=\"container is-fluid\">\n            <button onClick={() => handleResetClick()} className=\"button is-danger\">\n                Reset Both Playlists\n            </button>\n            <hr />\n            <MoviePlaylist />\n            <hr />\n            <SongPlaylist />\n        </div>\n    );\n}\n","import \"bulma/css/bulma.css\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n"],"sourceRoot":""}