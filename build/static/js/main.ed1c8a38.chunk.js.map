{"version":3,"sources":["data/index.js","store/index.js","components/MoviePlaylist.js","components/SongPlaylist.js","App.js","index.js"],"names":["createRandomMovie","faker","word","adjective","noun","createRandomSong","music","songName","songsSlice","createSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","index","indexOf","splice","moviesSlice","addMovie","removeMovie","reset","songs","movies","store","configureStore","reducer","actions","MoviePlaylist","moviePlaylist","useSelector","dispatch","useDispatch","renderedMovies","map","movie","onClick","handleMovieRemove","className","SongPlaylist","songPlaylist","renderedSongs","song","handleSongRemove","App","rootElement","document","getElementById","createRoot","render"],"mappings":"qIAMaA,EAAoB,WAC/B,MAAM,GAAN,OAAUC,QAAMC,KAAKC,YAAW,YAAIF,QAAMC,KAAKE,OACjD,EAEaC,EAAmB,WAC9B,OAAOJ,QAAMK,MAAMC,UACrB,E,eCVMC,EAAaC,YAAY,CAC7BC,KAAM,OACNC,aAAc,GACdC,SAAU,CACRC,QAAO,SAACC,EAAOC,GACbD,EAAME,KAAKD,EAAOE,QACpB,EAEAC,WAAU,SAACJ,EAAOC,GAChB,IAAMI,EAAQL,EAAMM,QAAQL,EAAOE,SACnCH,EAAMO,OAAOF,EAAO,EACtB,KAIEG,EAAcb,YAAY,CAC9BC,KAAM,QACNC,aAAc,GACdC,SAAU,CACRW,SAAQ,SAACT,EAAOC,GACdD,EAAME,KAAKD,EAAOE,QACpB,EAEAO,YAAW,SAACV,EAAOC,GACjB,IAAMI,EAAQL,EAAMM,QAAQL,EAAOE,SACnCH,EAAMO,OAAOF,EAAO,EACtB,EACAM,MAAK,SAACX,EAAOC,GACXD,EAAMY,MAAQ,GACdZ,EAAMa,OAAS,EACjB,KAIEC,EAAQC,YAAe,CAC3BC,QAAS,CACPJ,MAAOlB,EAAWsB,QAClBH,OAAQL,EAAYQ,WAyCjB,EAAgCtB,EAAWuB,QAAnClB,EAAO,EAAPA,QAASK,EAAU,EAAVA,WACjB,EAAyCI,EAAYS,QAA7CR,EAAQ,EAARA,SAAUC,EAAW,EAAXA,Y,GAAkB,EAALC,M,MCvBvBO,MArDf,WAGE,IAAMC,EAAgBC,aAAY,SAACpB,GACjC,OAAOA,EAAMa,MACf,IAEMQ,EAAWC,cAcXC,EAAiBJ,EAAcK,KAAI,SAACC,GACxC,OACE,+BACGA,EACD,wBACEC,QAAS,kBAZS,SAACD,GAIzBJ,EAASX,EAAYe,GACvB,CAOuBE,CAAkBF,EAAM,EACvCG,UAAU,mBAAkB,SAC7B,QALMH,EAUb,IAEA,OACE,sBAAKG,UAAU,UAAS,UACtB,sBAAKA,UAAU,eAAc,UAC3B,oBAAIA,UAAU,gBAAe,SAAC,mBAC9B,qBAAKA,UAAU,UAAS,SACtB,wBACEF,QAAS,kBAjCKD,EAiCgBvC,SA7BtCmC,EAASZ,EAASgB,IAJG,IAACA,CAiCoC,EAClDG,UAAU,iBAAgB,SAC3B,iCAKL,6BAAKL,MAGX,ECNeM,MA7Cf,WACE,IAAMC,EAAeV,aAAY,SAACpB,GAChC,OAAOA,EAAMY,KACf,IAEMS,EAAWC,cAQXS,EAAgBD,EAAaN,KAAI,SAACQ,GACtC,OACE,+BACGA,EACD,wBACEN,QAAS,kBATQ,SAACM,GACxBX,EAASjB,EAAW4B,GACtB,CAOuBC,CAAiBD,EAAK,EACrCJ,UAAU,mBAAkB,SAC7B,QALMI,EAUb,IAEA,OACE,sBAAKJ,UAAU,UAAS,UACtB,sBAAKA,UAAU,eAAc,UAC3B,oBAAIA,UAAU,gBAAe,SAAC,kBAC9B,qBAAKA,UAAU,UAAS,SACtB,wBACEF,QAAS,kBA3BIM,EA2BgBzC,SA1BrC8B,EAAStB,EAAQiC,IADG,IAACA,CA2BmC,EAChDJ,UAAU,iBAAgB,SAC3B,gCAKL,6BAAKG,MAGX,EC5Ce,SAASG,IAKtB,OACE,sBAAKN,UAAU,qBAAoB,UACjC,wBAAQF,QAAS,WAAwB,EAAEE,UAAU,mBAAkB,SAAC,yBAGxE,uBACA,cAAC,EAAa,IACd,uBACA,cAAC,EAAY,MAGnB,CCdA,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,IAAQ,CAACzB,MAAOA,EAAM,SACrB,cAACoB,EAAG,M","file":"static/js/main.ed1c8a38.chunk.js","sourcesContent":["import { faker } from \"@faker-js/faker/locale/en\";\n\n// This file has nothing to do with Redux\n// It exports functions that create random\n// movies and song\n\nexport const createRandomMovie = () => {\n  return `${faker.word.adjective()} ${faker.word.noun()}`;\n};\n\nexport const createRandomSong = () => {\n  return faker.music.songName();\n};\n","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst songsSlice = createSlice({\n  name: \"song\",\n  initialState: [],\n  reducers: {\n    addSong(state, action) {\n      state.push(action.payload);\n    },\n\n    removeSong(state, action) {\n      const index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    },\n  },\n});\n\nconst moviesSlice = createSlice({\n  name: \"movie\",\n  initialState: [],\n  reducers: {\n    addMovie(state, action) {\n      state.push(action.payload);\n    },\n\n    removeMovie(state, action) {\n      const index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    },\n    reset(state, action) {\n      state.songs = [];\n      state.movies = [];\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    songs: songsSlice.reducer,\n    movies: moviesSlice.reducer,\n  },\n});\n\n// const statingState = store.getState();\n\n// console.log(JSON.stringify(statingState));\n// store.dispatch({\n//   type: \"song/addSong\",\n//   payload: {\n//     id: 1,\n//     name: \"song 1\"\n//   }\n// });\n\n// const finalState = store.getState();\n\n// console.log(JSON.stringify(finalState));\n\n// // console.log('-----------',\n// // store.dispatch({\n// //   type: \"song/addSong\",\n// //   payload: {\n// //     id: 1,\n// //     name: \"song 1\"\n// //   }\n// // })\n// // )\n\n// store.dispatch(\n//   songsSlice.actions.addSong({\n//     id: 324,\n//     name: \"jsafdkjshdfk\"\n//   })\n// );\n\n// const finalStates = store.getState();\n\n// console.log(JSON.stringify(finalStates));\n\nexport { store };\nexport const { addSong, removeSong } = songsSlice.actions;\nexport const { addMovie, removeMovie, reset } = moviesSlice.actions;\n","import { createRandomMovie } from \"../data\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addMovie, removeMovie } from \"../store\";\n\nfunction MoviePlaylist() {\n  // To Do:\n  // Get list of movies\n  const moviePlaylist = useSelector((state) => {\n    return state.movies;\n  });\n\n  const dispatch = useDispatch();\n  const handleMovieAdd = (movie) => {\n    // To Do:\n    // Add movie to list of movies\n\n    dispatch(addMovie(movie));\n  };\n  const handleMovieRemove = (movie) => {\n    // To Do:\n    // Remove movie from list of movies\n\n    dispatch(removeMovie(movie));\n  };\n\n  const renderedMovies = moviePlaylist.map((movie) => {\n    return (\n      <li key={movie}>\n        {movie}\n        <button\n          onClick={() => handleMovieRemove(movie)}\n          className=\"button is-danger\"\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"content\">\n      <div className=\"table-header\">\n        <h3 className=\"subtitle is-3\">Movie Playlist</h3>\n        <div className=\"buttons\">\n          <button\n            onClick={() => handleMovieAdd(createRandomMovie())}\n            className=\"button is-link\"\n          >\n            + Add Movie to Playlist\n          </button>\n        </div>\n      </div>\n      <ul>{renderedMovies}</ul>\n    </div>\n  );\n}\n\nexport default MoviePlaylist;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { createRandomSong } from \"../data\";\n\nimport { addSong, removeSong } from \"../store\";\n\nfunction SongPlaylist() {\n  const songPlaylist = useSelector((state) => {\n    return state.songs;\n  });\n\n  const dispatch = useDispatch();\n  const handleSongAdd = (song) => {\n    dispatch(addSong(song));\n  };\n  const handleSongRemove = (song) => {\n    dispatch(removeSong(song));\n  };\n\n  const renderedSongs = songPlaylist.map((song) => {\n    return (\n      <li key={song}>\n        {song}\n        <button\n          onClick={() => handleSongRemove(song)}\n          className=\"button is-danger\"\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"content\">\n      <div className=\"table-header\">\n        <h3 className=\"subtitle is-3\">Song Playlist</h3>\n        <div className=\"buttons\">\n          <button\n            onClick={() => handleSongAdd(createRandomSong())}\n            className=\"button is-link\"\n          >\n            + Add Song to Playlist\n          </button>\n        </div>\n      </div>\n      <ul>{renderedSongs}</ul>\n    </div>\n  );\n}\n\nexport default SongPlaylist;\n","import \"./styles.css\";\nimport MoviePlaylist from \"./components/MoviePlaylist\";\nimport SongPlaylist from \"./components/SongPlaylist\";\n\nexport default function App() {\n  const handleResetClick = () => {\n    //\n  };\n\n  return (\n    <div className=\"container is-fluid\">\n      <button onClick={() => handleResetClick()} className=\"button is-danger\">\n        Reset Both Playlists\n      </button>\n      <hr />\n      <MoviePlaylist />\n      <hr />\n      <SongPlaylist />\n    </div>\n  );\n}\n","import \"bulma/css/bulma.css\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}